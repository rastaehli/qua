Object subclass: #Board	instanceVariableNames: 'turn state white black'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 11:03'!black: aPlayer	black _ aPlayer! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 11:33'!distanceBetweenKings	^(self position: 'white king') squaredDistanceTo: (self position: 'black king').! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/18/2004 11:33'!hasTwoKings 	^(self position: 'white king') notNil and: [ (self position: 'black king') notNil. ].! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 17:29'!indexFor: aPoint	^1 + aPoint x + (aPoint y * 8).! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 9/16/2004 15:56'!initializeFromProperties: configuration	state _ Array new: 64.	state at: 27 put: 'white king'.	state at: 28 put: 'black king'.	turn _ white.! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 17:30'!move: from to: destination 	| fromIndex piece destIndex |	fromIndex _ self indexFor: from.	piece _ state at: fromIndex.	state at: fromIndex put: nil.	destIndex _ self indexFor: destination.	state at: destIndex put: piece.	turn = white		ifTrue: [ turn _ black ]		ifFalse: [ turn _ white ].! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 17:22'!nextPlayer 	^turn.! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/18/2004 11:35'!playing 	^(self hasTwoKings) and: [ white notNil and: [ black notNil. ]. ].! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 17:38'!pointFor: index	^(index - 1 \\ 8)@(index - 1 // 8)! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 17:42'!position: piece	| index |	index _ 1.	[ index < state size and: [(state at: index) ~= piece] ]		whileTrue: [			index _ index + 1.		].	(state at: index) = piece 		ifTrue: [^self pointFor: index]		ifFalse: [ ^nil ].! !!Board methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 17:31'!white: aPlayer	white _ aPlayer.	turn _ white.! !Object subclass: #Chess	instanceVariableNames: 'board player1 player2'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!Chess methodsFor: 'as yet unclassified' stamp: 'ras 5/9/2005 22:41'!initializeFromProperties: properties	board _ (properties at: 'board') primaryInterface.	player1 _ (properties at: 'player1') primaryInterface.	player2 _ (properties at: 'player2') primaryInterface.	QuA bind: board property: 'white' to: player1.	QuA bind: board property: 'black' to: player2.	QuA bind: player1 property: 'board' to: board.	QuA bind: player2 property: 'board' to: board.! !!Chess methodsFor: 'as yet unclassified' stamp: 'ras 3/18/2004 11:40'!play	[ board playing ] whileTrue: [ board nextPlayer play. ].	(board nextPlayer = nil) ifTrue: [ ^'draw'. ].	(board position: 'white king') notNil		ifTrue: [ ^'white'. ]		ifFalse: [ ^'black'. ].	! !Object subclass: #Gen	instanceVariableNames: 'output'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!Gen commentStamp: 'ras 1/23/2003 22:30' prior: 0!This class, together with Sum is used for a simple demo of creating two objects, binding them, and letting them interact.  We use this in a QuAStep1 test suite.  The following code just shows the result on the Transcript.'	g _ Gen new.	s _ Sum new.	s initialize.	g output: s.	Transcript show: s sum; cr; endEntry.	g doSomething.	Transcript show: s sum; cr; endEntry.'!!Gen methodsFor: 'as yet unclassified' stamp: 'ras 5/19/2003 14:11'!gen1To: n	"generate some numbers and send them to output"	(1 to: n) do: [ :num | output put: num. ].! !!Gen methodsFor: 'as yet unclassified' stamp: 'ras 1/23/2003 22:19'!output: anObject	output _ anObject! !Object subclass: #HelloWorld	instanceVariableNames: 'output'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!HelloWorld methodsFor: 'as yet unclassified' stamp: 'ras 3/4/2003 20:47'!output: anObject	output _ anObject! !!HelloWorld methodsFor: 'as yet unclassified' stamp: 'ras 3/4/2003 08:44'!run	output notNil ifTrue: [ output value: 'Hello World' ].! !Object subclass: #Robot	instanceVariableNames: 'board'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!Robot methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 11:08'!board: aChessBoard	board _ aChessBoard! !!Robot methodsFor: 'as yet unclassified' stamp: 'ras 9/16/2004 15:58'!initializeFromProperties: configuration! !!Robot methodsFor: 'as yet unclassified' stamp: 'ras 3/18/2004 11:40'!play	| destination from |	"destination _ self selectBest: board possibleMoves."	from _ board position: 'white king'.	destination _ from + (1@0).	board move: from to: destination.! !!Robot methodsFor: 'as yet unclassified' stamp: 'ras 3/17/2004 11:25'!selectBest: collectionOfMovesAndResults	| sorted |	sorted _ collectionOfMovesAndResults sort: [ :a :b | 		a value hasTwoKings 			ifFalse: [ true. ]			ifTrue: [ b value hasTwoKings				ifFalse: [ false. ]				ifTrue: [ a distanceBetweenKings <= b distanceBetweenKings. ].			].	].	^sorted first key.! !Object subclass: #Sum	instanceVariableNames: 'sum'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!Sum methodsFor: 'as yet unclassified' stamp: 'ras 1/23/2003 22:22'!initialize	sum _ 0.! !!Sum methodsFor: 'as yet unclassified' stamp: 'ras 1/23/2003 22:17'!put: aNum	sum _ sum + aNum.! !!Sum methodsFor: 'as yet unclassified' stamp: 'ras 1/23/2003 22:17'!sum	^sum! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sum class	instanceVariableNames: ''!!Sum class methodsFor: 'as yet unclassified' stamp: 'ras 3/5/2003 22:35'!new	^super new initialize! !Object subclass: #TH263Decoder	instanceVariableNames: 'sink source'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!TH263Decoder methodsFor: 'as yet unclassified' stamp: 'ras 9/10/2004 22:41'!sink: anObject	sink _ anObject! !!TH263Decoder methodsFor: 'as yet unclassified' stamp: 'ras 5/12/2005 15:27'!source: anObject	source _ anObject! !!TH263Decoder methodsFor: 'as yet unclassified' stamp: 'ras 9/10/2004 22:44'!start! !ErrorPredictor subclass: #TH263Estimator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!TH263Estimator methodsFor: 'as yet unclassified' stamp: 'ras 5/16/2005 14:30'!errorForPlatform: platformSvcMirror andComponents: aSvcMap	^(Dictionary new)		at: 'delay' put: 350;		at: 'period' put: 72;		at: 'noise' put: 0.045;		yourself.! !Object subclass: #TMPEG2H263	instanceVariableNames: 'sink'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!TMPEG2H263 methodsFor: 'as yet unclassified' stamp: 'ras 9/10/2004 22:42'!sink: anObject	sink _ anObject! !Object subclass: #TMPEGDecoder	instanceVariableNames: 'sink source'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!TMPEGDecoder methodsFor: 'as yet unclassified' stamp: 'ras 9/10/2004 22:40'!sink: anObject	sink _ anObject! !!TMPEGDecoder methodsFor: 'as yet unclassified' stamp: 'ras 5/12/2005 15:27'!source: anObject	source _ anObject! !!TMPEGDecoder methodsFor: 'as yet unclassified' stamp: 'ras 9/10/2004 22:44'!start! !ErrorPredictor subclass: #TMPEGEstimator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!TMPEGEstimator methodsFor: 'as yet unclassified' stamp: 'ras 5/16/2005 14:31'!errorForPlatform: platformSvcMirror andComponents: aSvcMap	^(Dictionary new)		at: 'delay' put: 351;		at: 'period' put: 330;		at: 'noise' put: 0;		yourself.! !Object subclass: #TNetPipe	instanceVariableNames: 'sink'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!TNetPipe methodsFor: 'as yet unclassified' stamp: 'ras 5/12/2005 15:28'!sink: anObject	sink _ anObject! !Object subclass: #TVBuffer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!Object subclass: #TVDisp	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!Object subclass: #TVSrc	instanceVariableNames: 'sink'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!TVSrc methodsFor: 'as yet unclassified' stamp: 'ras 9/10/2004 22:39'!sink: anObject	sink _ anObject! !!TVSrc methodsFor: 'as yet unclassified' stamp: 'ras 9/10/2004 22:44'!start! !Object subclass: #TestComponentFactory	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!TestComponentFactory methodsFor: 'as yet unclassified' stamp: 'ras 1/28/2004 12:18'!hello	^'Hello World'.! !Object subclass: #TestDataType	instanceVariableNames: 'v1 v2'	classVariableNames: ''	poolDictionaries: ''	category: 'QuATest-Components'!!TestDataType methodsFor: 'as yet unclassified' stamp: 'ras 4/13/2004 14:51'!cat	^v1 printString, v2 printString! !!TestDataType methodsFor: 'as yet unclassified' stamp: 'ras 4/13/2004 14:50'!v1: obj	v1 _ obj! !!TestDataType methodsFor: 'as yet unclassified' stamp: 'ras 4/13/2004 14:50'!v2: obj	v2 _ obj! !